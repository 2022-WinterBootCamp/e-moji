version: "3.8"

volumes:
  mysql_data:
  build_folder:

services:
  mysqldb:
    build: ./backend/db
    env_file:
      - "./backend/db/db.env"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build: ./backend/backend
    command: >
      bash -c "python wait_mysql.py &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8080" &&
               
    ports:
      - "8080:8080"
    volumes:
      - ./backend/backend:/app
    depends_on:
      - mysqldb
    links:
      - mysqldb

  ai_server:
    build: ./backend/ai
    ports:
      - "8000:8000"
    environment:
      FLASK_DEBUG: 1 
    volumes:
      - ./backend/ai:/ai

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - "5672:5672" # Default Port
      - "15672:15672" # For UI
    expose:
      - "15672"
    
  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
      dockerfile: dockerfile
    volumes:
      - ./backend:/backend
    ports: []
    depends_on:
      - rabbitmq
      - redis
      - backend
    environment:
      - C_FORCE_ROOT=true
    command: sh -c "celery -A backend worker --loglevel=info"

  # nginx:
  #   build: ./nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - build_folder:/var/www/frontend
  #   depends_on:
  #     - backend
  #     - client
  
  # client:
  #   container_name: client
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend/:/frontend
  #     - build_folder:/frontend/build
  #   tty: true
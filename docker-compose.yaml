version: "3.8"

volumes:
  mysql_data:
  build_folder:

services:
  mysqldb:
    build: ./backend/db
    env_file:
      - "./backend/db/db.env"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build: ./backend/backend
    command: >
      bash -c "python wait_mysql.py &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8080" &&
               
    ports:
      - "8080:8080"
    volumes:
      - ./backend/backend:/app
    depends_on:
      - mysqldb
    links:
      - mysqldb

  ai_server:
    build: ./backend/ai
    ports:
      - "8000:8000"
    environment:
      FLASK_DEBUG: 1 
    volumes:
      - ./backend/ai:/ai


  # rabbitmq:
  #   image : rabbitmq:3-management
  #   container_name: rabbitmq-con
  #   environment:
  #     RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  #     RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
  #   ports:
  #     - 5672:5672 
  #     - 15672:15672
  #   volumes:
  #     - data_rabbitmq:/rabbitmq
  #   networks:
  #     - app-tier
  #   tty: true

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - build_folder:/var/www/frontend
    depends_on:
      - backend
      - client
  
  client:
    container_name: client
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/frontend
      - build_folder:/frontend/build
    tty: true

  # client:
  #   build: ./frontend
  #   command: ["npm", "start"]
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./frontend:/app